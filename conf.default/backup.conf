#-------------------------------------------------------------------------------
# bash-cloud-backup is a bash script, which can be used to automate local and cloud backup in Linux/Unix machines.
#
# COPYRIGHT......: Christos Pontikis - http://www.pontikis.gr
# LICENSE........: MIT (see https://opensource.org/licenses/MIT)
# PROJECT PAGE...: https://github.com/pontikis/bash-cloud-backup
# DOCUMENTATION..: See README.md for instructions
#                  See /conf.default for sample configuration files
#-------------------------------------------------------------------------------

# This is a sample configuration file, which defines which files or databases will be backed up

# By default, bash-cloud-backup expects this file to be /etc/bash-cloud-backup/backup.conf
# But you may define as many 'backup.conf' you like. In this case. use:
#
# bash-cloud-backup.sh -b /path/to/mybackup.conf

# Each [section] defines a backup set
# ATTENTION: Spaces ARE NOT PERMITTED in section names
# ATTENTION: DO NOT USE quotes arround strings

# bash-cloud-backup will create all directories you define in configuration files (assuming it has the required permissions)

# Option 'type' can be
# - files -> backup a file set (folders and files), as defined in <fileset> option
# - mysql -> backup MySQL object(s)
#
# anything else in <type> is ignored

# Options common for all types
# - type
# - path
# - prefix
# - starting_message
# - finish_message

# How bash-cloud-backup uses tar command:
# first a backup list is created according to <fileset>
# then
# tar tar_options foo.tar -T backup_list > /dev/null

# How bash-cloud-backup uses mysqldump command:
# When dumping MySQL databases, the follow command is executed:
# $MYSQLDUMP -u$mysql_user -p$mysql_password $mysqldump_options $database > $bkpfile

# web site (Apache2) -----------------------------------------------------------
[website1]
type=files
# path relative to backuproot
path=www/website1
# prefix of backup files
prefix=website1
# define files to backup separated with delimiter
fileset=/var/www/website1
delimiter=,
starting_message=website1 backup is starting...
finish_message=website1 backup completed.

# mysql database ---------------------------------------------------------------
[mysqldb1]
type=mysql
path=mysql/mysqldb1
prefix=mysqldb1
database=mysqldb1
starting_message=mysqldb1 MySQL database backup is starting...
finish_message=mysqldb1 MySQL database backup completed.

# mysql database - no data -----------------------------------------------------
[mysqldb1-no-data]
type=mysql
path=mysql/mysqldb1-no-data
prefix=mysqldb1-no-data
mysqldump_options=--no-data
database=mysqldb1
starting_message=mysqldb1 (schema only) MySQL database backup is starting...
finish_message=mysqldb1 (schema only) MySQL database backup completed.

# all mysql databases ----------------------------------------------------------
[all-mysql-databases]
type=mysql
path=mysql/all-databases
prefix=all-databases
mysqldump_options=--all-databases
database=
starting_message=All MySQL databases backup is starting...
finish_message=All MySQL databases backup completed.

# backup System Configuration files --------------------------------------------
[conf-files]
type=files
path=conf
prefix=conf
fileset=/etc
delimiter=,
starting_message=System Configuration files backup is starting...
finish_message=System Configuration files backup completed.

# backup scripts ---------------------------------------------------------------
[scripts]
type=files
path=scripts
prefix=scripts
fileset=/store/scripts,/root/scripts
delimiter=,
starting_message=Scripts backup is starting...
finish_message=Scripts backup completed.

# split backup set with <tar_options> ------------------------------------------
# this is a useful example of using 'tar_options'
# to exclude a (usually big) directory from a backup set
[website1-no-media]
type=files
path=www/website1-no-media
prefix=website1-no-media
fileset=/var/www/website1
delimiter=,
starting_message=website1 (excluding media) backup is starting...
finish_message=website1 (excluding media) backup completed.
tar_options=--exclude='var/www/website1/media' -cpvf

[website1-media]
type=files
path=www/website1-media
prefix=website1-media
fileset=/var/www/website1/media
delimiter=,
starting_message=website1 media backup is starting...
finish_message=website1 media backup completed.
# ------------------------------------------------------------------------------